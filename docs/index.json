[{"sid":"61AFE3C4C1921FF7","name":"make_normal_iterator","decl":"template <typename Iterator, typename Container>constexpr auto make_normal_iterator(Iterator i) noexcept -> normal_iterator<Iterator, Container>","type":1},{"sid":"24BCD2246427DB8A","name":"make_normal_iterator","decl":"template <typename Container>constexpr auto make_normal_iterator(typename Container::iterator i) noexcept -> normal_iterator<typename Container::iterator, Container>","type":1},{"sid":"60D5019FFC6D2295.html#A3591386E3D5B4F9","name":"match_any","decl":"constexpr match_any(cxl::utils::match_any &&) noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#3D1F51B2DE34C354","name":"get_allocator","decl":"constexpr auto get_allocator() const noexcept -> std::cxl::matrix::allocator_type","type":0},{"sid":"A6B4CF5564B24BD8.html#A61A8A9E32552F6F","name":"~matrix<T, Alloc>","decl":"~matrix<T, Alloc>()","type":0},{"sid":"A6B4CF5564B24BD8.html#A38A3E5C29547A6D","name":"swap","decl":"void swap(matrix<T, Alloc> & other) noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#43BDE3F3B93A7B6E","name":"reshape","decl":"constexpr auto reshape(int new_rows, int new_columns) -> void","type":0},{"sid":"A6B4CF5564B24BD8.html#D14C23C7A14B20F4","name":"at","decl":"constexpr auto at(int row, int column) -> std::cxl::matrix::reference","type":0},{"sid":"A6B4CF5564B24BD8.html#76EA29E638D15FCC","name":"clear","decl":"constexpr auto clear() -> void","type":0},{"sid":"92548A65D0E56813.html#36609B6B801C716C","name":"_S_to_pointer","decl":"template <typename P>static constexpr auto _S_to_pointer(P * ptr) -> P *","type":0},{"sid":"60D5019FFC6D2295.html#E0831A8BA430AC42","name":"match_any","decl":"constexpr match_any(const cxl::utils::match_any &) noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#34E446201E15B9A6","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(int num_rows, int num_columns, const std::cxl::matrix::allocator_type & alloc = type-parameter-0-1{})","type":0},{"sid":"A6B4CF5564B24BD8.html#C7BE4084968B67AE","name":"resize","decl":"constexpr auto resize(int new_rows, int new_columns, std::cxl::matrix::const_reference fill_value) -> void","type":0},{"sid":"A6B4CF5564B24BD8.html#213A16685DABA788","name":"shape","decl":"constexpr auto shape() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#A3EF86800524D32B","name":"rend","decl":"constexpr auto rend() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#43915B1AE828F886","name":"resize","decl":"constexpr auto resize(int new_rows, int new_columns) -> void","type":0},{"sid":"A6B4CF5564B24BD8.html#B16F8BBC64954F6B","name":"at","decl":"constexpr auto at(int row, int column) const -> std::cxl::matrix::const_reference","type":0},{"sid":"A6B4CF5564B24BD8.html#ABF833DD07CE6309","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(int num_rows, int num_columns, std::cxl::matrix::const_reference fill_value, const std::cxl::matrix::allocator_type & alloc = type-parameter-0-1())","type":0},{"sid":"A6B4CF5564B24BD8.html#208A02D7C88CCFB4","name":"max_size","decl":"constexpr auto max_size() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#76C1C74B0C76C626","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(const matrix<T, Alloc> & other)","type":0},{"sid":"A6B4CF5564B24BD8.html#44B99ABC668A1F16","name":"size","decl":"constexpr auto size() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#57F82A9B266813A7","name":"erase","decl":"constexpr auto erase(int first, int last) -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#F93DA9C0C300B62B","name":"num_columns","decl":"constexpr auto num_columns() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#8D7F6D00F5A79330","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(int)","type":0},{"sid":"A6B4CF5564B24BD8.html#60729E1FFAC52F2C","name":"crbegin","decl":"constexpr auto crbegin() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#923247A8900973E6","name":"rend","decl":"constexpr auto rend() noexcept -> int","type":0},{"sid":"60D5019FFC6D2295.html#E3218C5C2D8AD009","name":"match_any","decl":"template <typename T>constexpr match_any(T && t) noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#C1A6F1A3DF50B84D","name":"assign","decl":"constexpr auto assign(int) -> void","type":0},{"sid":"60D5019FFC6D2295.html#97F5FB20C50E652E","name":"~match_any","decl":"constexpr ~match_any() noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#C83835AEAB1E8CC6","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(const int & dimensions, const std::cxl::matrix::allocator_type & alloc = type-parameter-0-1{})","type":0},{"sid":"A6B4CF5564B24BD8.html#C5150776DA898B94","name":"data","decl":"constexpr auto data() const noexcept -> int","type":0},{"sid":"F2659EAB7E3E9BCC","name":"<deduction guide for match>","decl":"template <typename... Fs>auto <deduction guide for match>(Fs &&...) -> match<std::remove_reference_t<Fs>...>","type":1},{"sid":"A6B4CF5564B24BD8.html#23C05BFD91444C1E","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>() noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#6E7585671ACDCC23","name":"end","decl":"constexpr auto end() noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#85E5A6843E3AD8FC","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(matrix<T, Alloc> && other, const std::cxl::matrix::allocator_type & alloc) noexcept","type":0},{"sid":"B758373C0DF5C4DF.html#BA17B412BB09277C","name":"match<Fs...>","decl":"template <class... Ts>match<Fs...>(Ts &&... ts)","type":0},{"sid":"A6B4CF5564B24BD8.html#2B42C4C2AA20A1FC","name":"rbegin","decl":"constexpr auto rbegin() noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#A280730F623E6E14","name":"is_square","decl":"constexpr auto is_square() const noexcept -> bool","type":0},{"sid":"A6B4CF5564B24BD8.html#E6EDC4C9F5A6AA14","name":"data","decl":"constexpr auto data() noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#EE7B288F03503DAB","name":"front","decl":"constexpr auto front() noexcept -> std::cxl::matrix::reference","type":0},{"sid":"A6B4CF5564B24BD8.html#936E232388D06854","name":"num_rows","decl":"constexpr auto num_rows() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#B1FB8AC9C8CF1469","name":"front","decl":"constexpr auto front() const noexcept -> std::cxl::matrix::const_reference","type":0},{"sid":"A6B4CF5564B24BD8.html#0D736503258FAC3F","name":"empty","decl":"constexpr auto empty() const noexcept -> bool","type":0},{"sid":"A6B4CF5564B24BD8.html#180DC781EA11784F","name":"back","decl":"constexpr auto back() noexcept -> std::cxl::matrix::reference","type":0},{"sid":"A6B4CF5564B24BD8.html#203004392453B5A9","name":"back","decl":"constexpr auto back() const noexcept -> std::cxl::matrix::const_reference","type":0},{"sid":"A6B4CF5564B24BD8.html#349BECCF445AA05A","name":"erase","decl":"constexpr auto erase(int position) -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#7338C545EC3B1AE7","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(const std::cxl::matrix::allocator_type & alloc) noexcept","type":0},{"sid":"A6B4CF5564B24BD8.html#29DB80B9251C04F0","name":"cbegin","decl":"constexpr auto cbegin() const noexcept -> int","type":0},{"sid":"92548A65D0E56813.html#57F52F9CF61CD64B","name":"_S_to_pointer","decl":"template <typename P>static constexpr auto _S_to_pointer(P obj) -> cxl::normal_iterator::pointer","type":0},{"sid":"A6B4CF5564B24BD8.html#A1617B0C13C0CB71","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(const matrix<T, Alloc> & other, const std::cxl::matrix::allocator_type & alloc)","type":0},{"sid":"86674E2B08F992A6","name":"swap","decl":"template <typename T>inline constexpr auto swap(int & x, int & y) noexcept -> void","type":1},{"sid":"A6B4CF5564B24BD8.html#84FE457F909EABB4","name":"begin","decl":"constexpr auto begin() noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#8A994E093E3C455E","name":"begin","decl":"constexpr auto begin() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#6FD4119C46063122","name":"rbegin","decl":"constexpr auto rbegin() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#8FF1AEB7B6AF78A3","name":"end","decl":"constexpr auto end() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#BA690F566D1E3D51","name":"crend","decl":"constexpr auto crend() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#BB3F20B1E0F8AA1C","name":"cend","decl":"constexpr auto cend() const noexcept -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#2E2F3B80168FACD6","name":"map","decl":"template <int F>constexpr auto map(int func) const -> int","type":0},{"sid":"A6B4CF5564B24BD8.html#80572D4396F04FAF","name":"matrix<T, Alloc>","decl":"constexpr matrix<T, Alloc>(matrix<T, Alloc> && other) noexcept","type":0},{"sid":"92548A65D0E56813.html#773501FD87605849","name":"normal_iterator<Iterator, Container>","decl":"constexpr normal_iterator<Iterator, Container>(const cxl::normal_iterator::iterator_type & other) noexcept","type":0},{"sid":"92548A65D0E56813.html#F33216A8DAA119E1","name":"normal_iterator<Iterator, Container>","decl":"constexpr normal_iterator<Iterator, Container>() noexcept","type":0},{"sid":"92548A65D0E56813.html#F1B922B1E20BB8F8","name":"normal_iterator<Iterator, Container>","decl":"template <typename Iter>constexpr normal_iterator<Iterator, Container>(const normal_iterator<Iter, Container> & other) noexcept","type":0},{"sid":"92548A65D0E56813.html#E1CDC31EF22EB325","name":"base","decl":"constexpr auto base() const noexcept -> cxl::normal_iterator::iterator_type","type":0},{"sid":"957781E8D8EAACA3","name":"Point","decl":"struct Point","type":2},{"sid":"92548A65D0E56813","name":"normal_iterator","decl":"template <typename Iterator, typename Container> class normal_iterator","type":3},{"sid":"A6B4CF5564B24BD8","name":"matrix","decl":"template <typename T, typename Alloc> class matrix","type":3},{"sid":"60D5019FFC6D2295","name":"match_any","decl":"struct match_any","type":2},{"sid":"B758373C0DF5C4DF","name":"match","decl":"template <typename... Fs> struct match","type":2}]